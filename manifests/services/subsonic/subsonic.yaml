---
apiVersion: v1
kind: Namespace
metadata:
  name: subsonic
  labels:
    name: subsonic

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: subsonic-music-data-claim
  namespace: subsonic
spec:
  storageClassName: subsonic-mp3-directory
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mariadb-pv-claim
  namespace: subsonic
spec:
  storageClassName: mariadb-subsonic-storage-class
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: subsonic-mysql-pv-claim
  namespace: subsonic  
spec:
  storageClassName: subsonic-mysql-storage-class
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
  namespace: subsonic
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: subsonic
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: subsonic-mysql-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: subsonic
spec:
  ports:
  - name: dbport
    port: 3306
    targetPort: 3306
  selector:
    app: mysql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: subsonic
  name: subsonic
  namespace: subsonic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: subsonic
  template:
    metadata:
      labels:
        app: subsonic
    spec:
      initContainers:
      - name: database-setup
        image: mysql:5.6
        imagePullPolicy: IfNotPresent
        command: [sh,-c,mysql -h mysql-service -ppassword -e "CREATE DATABASE IF NOT EXISTS subsonic CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; GRANT ALL PRIVILEGES ON subsonic.* TO 'root'@'%' IDENTIFIED BY 'password'; FLUSH PRIVILEGES;"]
      containers:
      - image: rwlove/subsonic:6.1.6
        imagePullPolicy: IfNotPresent
        name: subsonic
        env:
        - name: SUBSONIC_DB
          value: "jdbc:mysql://mysql-service:3306/subsonic?user=root&password=password&characterEncoding=UTF-8"
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: music-volume
          mountPath: /music
          readOnly: true
        - name: data-volume
          mountPath: /data
        - name: playlist-volume
          mountPath: /playlists
        - name: podcast-volume
          mountPath: /podcasts          
      volumes:
      - name: music-volume
        persistentVolumeClaim:
          claimName: subsonic-music-data-claim
      - name: data-volume
        nfs:
          server: brain.thesteamedcrab.com
          path: /mnt/mass_storage/docker_storage/subsonick8s/data
      - name: playlist-volume
        nfs:
          server: brain.thesteamedcrab.com
          path: /mnt/mass_storage/docker_storage/subsonick8s/playlists
      - name: podcast-volume
        nfs:
          server: brain.thesteamedcrab.com
          path: /mnt/mass_storage/docker_storage/subsonick8s/podcasts
