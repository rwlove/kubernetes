# Default values for radarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: linuxserver/radarr
  tag: version-3.0.0.3989
  pullPolicy: IfNotPresent

# upgrade strategy type (e.g. Recreate or RollingUpdate)
strategyType: Recreate

probes:
  liveness:
    enabled: true
    custom: false
    spec:
      failureThreshold: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10

  readiness:
    enabled: true
    custom: false
    spec:
      initialDelaySeconds: 600
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3

  startup:
    enabled: true
    custom: false
    spec:
      initialDelaySeconds: 600
      timeoutSeconds: 1
      periodSeconds: 5
      failureThreshold: 30

env:
  TZ: "America/New_York"
  PUID: 1000
  PGID: 1001

# Prometheus Metrics
exportarr:
  enabled: false
  image:
    repository: onedr0p/exportarr
    tag: v0.3.0
    pullPolicy: IfNotPresent
  url: "http://radarr.thesteamedcrab.com:7878"
  apikey:
  port: 9708
  serviceMonitor:
    enabled: false
    namespace: radarr
    path: /metrics
    interval: 4m
    scrapeTimeout: 90s
    additionalLabels: {}

nameOverride: "radarr"
fullnameOverride: ""

timezone: 'America/New_York'

service:
  type: LoadBalancer
  port:
    port: 7878
  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}
  labels: {}
  ## Use loadBalancerIP to request a specific static IP,
  ## otherwise leave blank
  ##
  loadBalancerIP: 192.168.6.28
  # loadBalancerSourceRanges: []
  ## Set the externalTrafficPolicy in the Service to either Cluster or Local
  # externalTrafficPolicy: Cluster

persistence:
  config:
    enabled: true
    ## radarr configuration data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "radarr-config-storage-class"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    # existingClaim: your-claim
    # subPath: some-subpath
    accessMode: ReadWriteOnce
    size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    skipuninstall: false
  media:
    enabled: true
    ## radarr media volume configuration
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "radarr-media-storage-class"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    # existingClaim: your-claim
    # subPath: some-subpath
    accessMode: ReadWriteMany
    size: 10Gi
    ## Do not delete the pvc upon helm uninstall
    skipuninstall: false

additionalVolumeMounts:
- name: radarr-data
  mountPath: "/downloads"

additionalVolumes:
- name: radarr-data
  persistentVolumeClaim:
    claimName: radarr-data-pv-claim

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector:
  kubernetes.io/hostname: worker3.thesteamedcrab.com

tolerations: []

affinity: {}

podAnnotations: {}

deploymentAnnotations: {}
